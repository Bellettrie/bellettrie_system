# Generated by Django 3.2.10 on 2022-05-02 18:38

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('creators', '0001_initial'),
        ('inventarisation', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_code', models.CharField(blank=True, max_length=64)),
                ('book_code_sortable', models.CharField(blank=True, max_length=128)),
                ('language', models.CharField(blank=True, max_length=64)),
                ('article', models.CharField(blank=True, max_length=64, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=255, null=True)),
                ('old_id', models.IntegerField(null=True)),
                ('isbn10', models.CharField(blank=True, max_length=64, null=True)),
                ('isbn13', models.CharField(blank=True, max_length=64, null=True)),
                ('pages', models.CharField(blank=True, max_length=32, null=True)),
                ('hidden', models.BooleanField()),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('publication_year', models.IntegerField(blank=True, null=True)),
                ('bought_date', models.DateField(blank=True, default='1900-01-01', null=True)),
                ('added_on', models.DateField(auto_now_add=True)),
                ('last_seen', models.DateField(blank=True, null=True)),
                ('book_code_extension', models.CharField(blank=True, max_length=16)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('old_id', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, max_length=64)),
                ('article', models.CharField(blank=True, max_length=64, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=255, null=True)),
                ('original_language', models.CharField(blank=True, max_length=64, null=True)),
                ('original_article', models.CharField(blank=True, max_length=64, null=True)),
                ('original_title', models.CharField(blank=True, max_length=255, null=True)),
                ('original_subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('is_translated', models.BooleanField()),
                ('date_added', models.DateField()),
                ('sorting', models.CharField(choices=[('AUTHOR', 'Author'), ('TITLE', 'Title')], default='TITLE', max_length=64)),
                ('comment', models.TextField(blank=True)),
                ('internal_comment', models.CharField(blank=True, max_length=1024)),
                ('old_id', models.IntegerField(blank=True, null=True)),
                ('hidden', models.BooleanField()),
                ('listed_author', models.CharField(default='ZZZZZZZZ', max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('work_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='works.work')),
            ],
            options={
                'abstract': False,
            },
            bases=('works.work',),
        ),
        migrations.CreateModel(
            name='SubWork',
            fields=[
                ('work_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='works.work')),
            ],
            options={
                'abstract': False,
            },
            bases=('works.work', models.Model),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('old_id', models.IntegerField()),
                ('sig_gen', models.CharField(choices=[('Author', 'author'), ('Author_Translated', 'author_translated'), ('Title', 'title')], default='author', max_length=64)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='works.category')),
            ],
        ),
        migrations.CreateModel(
            name='ItemState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateTime', models.DateTimeField(default=datetime.datetime.now)),
                ('type', models.CharField(choices=[('AVAILABLE', 'Available'), ('MISSING', 'Missing'), ('LOST', 'Lost'), ('BROKEN', 'Broken'), ('OFFSITE', 'Off-Site'), ('DISPLAY', 'On Display'), ('FEATURED', 'Featured'), ('SOLD', 'Sold'), ('FORSALE', 'For Sale')], max_length=64)),
                ('reason', models.TextField(blank=True)),
                ('inventarisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventarisation.inventarisation')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='works.item')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='works.location'),
        ),
        migrations.AddField(
            model_name='category',
            name='item_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='works.itemtype'),
        ),
        migrations.CreateModel(
            name='WorkInPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_in_publication', models.IntegerField()),
                ('display_number_in_publication', models.CharField(max_length=64)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='works.publication')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='works.subwork')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='works.publication'),
        ),
        migrations.CreateModel(
            name='CreatorToWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='creators.creator')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='creators.creatorrole')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='works.work')),
            ],
            options={
                'unique_together': {('creator', 'work', 'number')},
            },
        ),
    ]
